//Get union of two linkedlist
import java.util.*;
class Node
{
	int data;
	Node next;
	Node(int data)
	{
		this.data=data;
		this .next=null;
	}
}
public class LinkedList 
{
	static Node getUnion(Node head1,Node head2)
	{
		Node start   = null;
		Node new_node= null;
		ArrayList<Integer> hs= new ArrayList<Integer>();
		while(head1!=null)
		{
			if(!hs.contains(head1.data))
			{
				hs.add(head1.data);
				if(start==null)
				{
					start=head1;
					new_node=start;
				}
				else
				{
					new_node.next=head1;
					new_node=new_node.next;
				}
			}
			head1=head1.next;
		}
		while(head2!=null)
		{
			if(!hs.contains(head2.data))
			{
				new_node.next=head2;
				new_node=new_node.next;
				hs.add(head2.data);
			}
			head2=head2.next;
		}
		new_node.next=null;
		return start;
	}
	static void print(Node head)
	{
		Node temp =head;
		while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
	}
	public static void main(String[] args) 
	{
		Node head1 = new Node(9);
		head1.next = new Node(6);
		head1.next.next = new Node(4);
		head1.next.next.next = new Node(2);
		head1.next.next.next.next = new Node(3);
		head1.next.next.next.next.next = new Node(8);
		
		Node head2 = new Node(1);
		head2.next = new Node(2);
		head2.next.next = new Node(8);
		head2.next.next.next = new Node(6);
		head2.next.next.next.next = new Node(2);
		Node ans=getUnion(head1,head2);
		print(ans);
	}
}
