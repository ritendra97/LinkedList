//Leaves to DLL
class Node{
    int data;
    Node left;
    Node right;
    Node next;
    Node prv;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
        this.next =null;
 	   this.prv  =null;
    }
}
public class LinkedList 
{
	static Node head = null;
	static Node tail =null;
	public static void push(Node node)
	{
		if(head == null)
		{
			head = node;
			head.next =null;
			head.prv =null;
			tail = head;
		}
		else
		{
			node.prv=tail;
			tail.next=node;
			tail=node;
		}
	}
	public static Node convertToDLL(Node root)
    {
		if(root==null)
		{
			return null;
		}
		if(root.left==null && root.right==null)
		{
			push(root);
			return null;
		}
		root.left=convertToDLL(root.left);
		root.right=convertToDLL(root.right);
		return root;
    }
	static void print(Node node)
	{
		Node temp=node;
		while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
	}
	static void preorder(Node node)
	{
		if(node==null)
			return;
		System.out.print(node.data+" ");
		preorder(node.left);
		preorder(node.right);
		
	}
	public static void main(String[] args) 
	{	
		Node root = new Node(1);
		root.left = new Node(2);
		root.right = new Node(3);
		root.left.left = new Node(4);
		root.left.right= new Node(5);
		root.right.left = new Node(6);
		root.right.right = new Node(7);
		convertToDLL(root);
		print(head);
		System.out.println();
		preorder(root);
	}
}
