//Add two numbers represented by linked lists Recursion
import java.util.*;
class Node
{
	int data;
	Node next;
	Node(int data)
	{
		this.data=data;
		this.next=null;
	}
}
public class LinkedList 
{
	static Node head1;
	static Node head2;
	static Node head=null;
	static Node ans=null;
	static int sum=0;
	static int carry=0;
	static int addNumbersutil(Node node1, Node node2)
	{
		if(node1==null && node2==null)
			return 0;
		addNumbersutil(node1.next,node2.next);
		sum = node1.data+node2.data+carry;
		carry=sum/10;
		sum=sum%10;
		ans = new Node(sum);
		if(head==null)
		{
			head=ans;
		}
		else
		{
			ans.next = head;
			head=ans;
		}
		return carry;
	}
	static Node addNumbers(Node head1,Node head2)
	{
		int new_carry=addNumbersutil(head1,head2);
		if(new_carry>0)
		{
			ans = new Node(new_carry);
			ans.next=head;
			head=ans;
		}
		return head;
	}
	static void print(Node head)
	{
		Node temp = head;
		while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
	}
	public static void main(String[] args) 
	{
		head1 = new Node(1);
		head1.next = new Node(9);
		head1.next.next = new Node(3);
		
		head2 = new Node(9);
		head2.next = new Node(2);
		head2.next.next = new Node(3);
		Node head = addNumbers(head1,head2);
		print(head);
	}
}
