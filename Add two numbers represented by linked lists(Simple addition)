//Add two numbers represented by linked lists
class Node 
{
	int data;
	Node next;
	Node(int data)
	{
		this.data=data;
		this.next=null;
	}
	Node()
	{}
}
public class LinkedList 
{
	static void reverse(Node head)
	{
		Node prv=null;
		Node curr=head;
		Node next=null;
		while(curr!=null)
		{
			next=curr.next;
			curr.next=prv;
			prv=curr;
			curr=next;
		}
		head=prv;
	}
	static Node addTwoLists(Node first, Node second)
    {
//		reverse(first);
//		reverse(second);
		Node res=null;
		Node prv=null;
		int carry=0;
		int sum=0;
		Node temp=null;
		while(first!=null && second!=null)
		{
			sum=carry+(first!=null?first.data:0)+(second!=null?second.data:0);
			carry = sum/10;
			sum=sum%10;
			temp=new Node(sum);
			if(res==null)
			{
				res=temp;
				prv=res;
			}
			else
			{
				prv.next=temp;
				prv=temp;
			}
			if (first != null) {
                first = first.next;
            }
            if (second != null) {
                second = second.next;
            }
		}
		if(carry>0)
		{
			temp=new Node(carry);
			prv.next=temp;
			prv=prv.next;
		}
		prv.next=null;
		return res;
    }
	static void print(Node head)
	{
		Node temp=head;
		while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
	}
	public static void main(String[] args)
	{
		Node head1= new Node(5);
		head1.next =new Node(6);
		head1.next.next = new Node(3);
		
		Node head2= new Node(8);
		head2.next =new Node(4);
		head2.next.next = new Node(2);
		Node ans = addTwoLists(head1,head2);
		print(ans);
	}
}
