//Sorted insert for circular linked list.
import java.util.*;
class Node
{
	int data;
	Node next;
	Node(int data)
	{
		this.data=data;
		this.next=null;
	}
}
public class LinkedList 
{
	static Node head=null;
	static void pushsortedmanner(Node new_node)
	{
		Node current=head;
		if(current==null)
		{
			new_node.next=new_node;
			head=new_node;
		}
		else if(current.data>=new_node.data)
		{
			while(current.next!=head)
			{
				current=current.next;
			}
			current.next=new_node;
			new_node.next=head;
			head=new_node;
		}
		else
		{
			while(current.next!=head && current.next.data<new_node.data)
			{
				current=current.next;
			}
			new_node.next=current.next;
			current.next=new_node;
		}
	}
	static void printList()
    {
        if (head != null)
        {
            Node temp = head;
            do
            {
                System.out.print(temp.data + " ");
                temp = temp.next;
            }  while (temp != head);
        }
    }
	public static void main(String[] args) 
	{
		int arr[]  = {12,56,2,11,1,90};
		for(int i=0;i<arr.length;i++)
		{
			Node new_node = new Node(arr[i]);
			pushsortedmanner(new_node);
		}
		printList();
	}
}
